@model HospitalManagementNew.Models.Staffdetails

@{
    ViewBag.Title = "Create";
}

<head>
    @Styles.Render("~/Content/hospitalstyles.css")


</head>

<div class="register">

    <h2>Create New Staff</h2>
</div>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal register_background">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group register_texts">
        @Html.LabelFor(model => model.staffname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.staffname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.staffname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group register_texts">
        @Html.LabelFor(model => model.staffaddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.staffaddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.staffaddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group register_texts">
        @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            Male
            @Html.RadioButtonFor(model => model.gender, "male")
            Female
            @Html.RadioButtonFor(model => model.gender, "female")
        </div>

        @Html.ValidationMessageFor(Model => Model.gender, "", new { @class = "text-danger" })

    </div>

    <div class="form-group register_texts">
        @Html.LabelFor(model => model.stafftype, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.stafftype, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.stafftype, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group register_texts">
        @Html.LabelFor(model => model.position, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.position, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.position, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group register_texts">
        @Html.LabelFor(model => model.salary, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.salary, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.salary, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group register_texts">
        @Html.LabelFor(model => model.dateofjoining, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.dateofjoining, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.dateofjoining, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group register_button">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-info" />
        </div>


    </div>
    <div class="registerbutn">
        @Html.ActionLink("Back to List", "Staffdetails")
    </div>
</div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
